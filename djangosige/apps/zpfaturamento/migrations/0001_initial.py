# Generated by Django 3.2.10 on 2023-01-10 19:37

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CaracteristicaFTModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('acao', models.CharField(blank=True, choices=[('SOMA', 'SOMA'), ('DIMINUI', 'DIMINUI')], max_length=50, null=True)),
                ('base_icms', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassificacaoFaturamentoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='FaturamentoTUSTModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nome', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ItemFaturamentoModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('nome', models.CharField(max_length=50)),
                ('acao_no_valor', models.CharField(blank=True, choices=[('SOMA', 'SOMA'), ('DIMINUI', 'DIMINUI')], max_length=50, null=True)),
                ('base_icms', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('faturar_desligados', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('exclusivo_outras_faturas', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('forma_do_valor', models.CharField(blank=True, choices=[('Informado', 'Informado'), ('Fixo', 'Fixo'), ('Fixo por fase e grupo', 'Fixo por fase e grupo'), ('% sobre energia não paga', '% sobre energia não paga'), ('% sobre energia', '% sobre energia'), ('% sobre energia s/ ICMS', '% sobre energia s/ ICMS'), ('% sobre itens positivos', '% sobre itens positivos'), ('Valor x KVA instalado', 'Qtde . KWh x Valor KWh'), ('Qtde . KWh x Valor item', 'Qtde . KWh x Valor item'), ('% sobre itens positivos menos convênios', '% sobre itens positivos menos convênios'), ('% sobre consumo Kwh', '% sobre consumo Kwh'), ('% sobre consumo  Kw', '% sobre consumo  Kw'), ('% sobre consumo Kwh s/ ICMS/PIS/COFINS', '% sobre consumo Kwh s/ ICMS/PIS/COFINS'), ('% sobre consumo Kwh + UFER + Tributação', '% sobre consumo Kwh + UFER + Tributação')], max_length=50, null=True)),
                ('mais_de_uma_cobranca_no_mes', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('transferir_no_pedido_de_ligacao', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('gera_provisao', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
                ('contabilizar', models.CharField(blank=True, choices=[('Manualmente no faturamento', 'Manualmente no faturamento'), ('No lançamento de outras faturas', 'No lançamento de outras faturas:'), ('Contabiliza pela classe', 'Contabiliza pela classe'), ('Não apropria', 'Não apropria'), ('Apropria quando insere pela data', 'Apropria quando insere pela data')], max_length=50, null=True)),
                ('gera_quotas', models.CharField(blank=True, choices=[('SIM', 'SIM'), ('NÃO', 'NÃO')], max_length=50, null=True)),
            ],
        ),
    ]
